trigger:
- master
- PublicRelease
- test-dev

# Set variables once
variables:
  release_tag:          'latest-dev'
  release_title:        'Latest Release Test'


resources:
- repo:                 self


phases:
- phase:                Phase_1
  displayName:          Agent macOS

  condition:            succeeded()
  queue:
    name:               Hosted macOS
  steps:
  # Use Python Version
  # Retrieves the specified version of Python from the tool cache. Optionally add it to PATH.
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - script:             'brew install gcc'
    displayName:        'install gcc+gfortran'
    continueOnError:    true

  - script:             |
       make release
    displayName:        'make suews'
    continueOnError:    true

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   Urban-Meteorology-Reading/SUEWS
      assets:           ./ReleaseRepo/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false


- phase:                Phase_2
  displayName:          Agent Windows

  condition:            succeeded()
  queue:
    name:               Hosted VS2017

  steps:
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - bash:               |
       make release
    displayName:        'make suews'
    failOnStderr:       true

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   Urban-Meteorology-Reading/SUEWS
      assets:           ./ReleaseRepo/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false


- phase:                Phase_3
  displayName:          Agent Linux

  condition:            succeeded()
  queue:
    name:               Hosted Ubuntu 1604
  steps:
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - script:             |
       make release
       # docker run -v $(pwd):/io dockcross/manylinux-x64 bash -c "cd /io/;make release"
    displayName:        'docker make suews manylinux'
    continueOnError:    true

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   Urban-Meteorology-Reading/SUEWS
      assets:           ./ReleaseRepo/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false
