trigger:
- master
- PublicRelease
- test-dev

resources:
- repo: self
phases:
- phase: Phase_1
  displayName: Agent macOS

  condition: succeeded()
  queue:
    name: Hosted macOS
  steps:
  - script: 'brew install gcc'
    displayName: 'install gcc+gfortran'
    continueOnError: true

  - script: |
       make
    displayName: 'make suews'
    continueOnError: true

  # Archive Files
  # Archive files using compression formats such as .7z, .rar, .tar.gz, and .zip.
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: ./ReleaseRepo/build
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: ./SUEWS-macOS.zip
      replaceExistingArchive: true
    displayName: 'Create Release'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: ./SUEWS-macOS.zip
      artifactName: 'SUEWS-macOS.zip'
    displayName: 'Publish Release'

  - task: GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName: Urban-Meteorology-Reading/SUEWS
      assets: $(Build.ArtifactStagingDirectory)
      action: 'Edit'
      target: '$(build.sourceVersion)'
      tagSource: 'manual' # 'auto'
      tag: test # Required when action == edit || action == discard || tagSource == manual
      title: 'test release'
      assetUploadMode: 'delete'
      isDraft: true
      isPrerelease: false
      addChangeLog: true


- phase: Phase_2
  displayName: Agent Windows

  condition: succeeded()
  queue:
    name: Hosted VS2017

  steps:
  - script: |
       make

    displayName: 'make suews'
    continueOnError: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: ./ReleaseRepo/build/
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: ./SUEWS-win64.zip
      replaceExistingArchive: true
    displayName: 'Create Release'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: ./SUEWS-win64.zip
      artifactName: 'SUEWS-win64.zip'
    displayName: 'Publish Release'


- phase: Phase_3
  displayName: Agent Linux

  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
       docker run -v $(pwd):/io dockcross/manylinux-x64 bash -c "cd /io/;make"
    displayName: 'docker make suews manylinux'
    continueOnError: true
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: ./ReleaseRepo/build
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: ./SUEWS-Linux.zip
      replaceExistingArchive: true
    displayName: 'Create Release'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: ./SUEWS-Linux.zip
      artifactName: 'SUEWS-Linux.zip'
    displayName: 'Publish Release'
